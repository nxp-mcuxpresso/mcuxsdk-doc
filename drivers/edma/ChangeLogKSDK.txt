/*!
@page driver_log Driver Change Log

@section eDMA EDMA
  The current eDMA driver version is 2.4.2.

  -2.4.2
    - Bug Fixes
      - Fixed the wrong tcd done count calculated in first TCD interrupt by correct the initial value of the header.

  - 2.4.1
    - Bug Fixes
      - Added clear CITER and BITER registers in EDMA_AbortTransfer to make sure the TCD registers in a correct state for next
        calling of EDMA_SubmitTransfer.
      - Removed the clear DONE status for ESG not enabled case to aovid DONE bit cleared unexpectedly.

  - 2.4.0
    - Improvements
      - Added api EDMA_EnableContinuousChannelLinkMode to support continuous link mode.
      - Added apis EDMA_SetMajorOffsetConfig/EDMA_TcdSetMajorOffsetConfig to support major loop address offset feature.
      - Added api EDMA_EnableChannelMinorLoopMapping for minor loop offset feature.
      - Removed the reduntant IRQ Handler in edma driver.

  - 2.3.2
    - Improvements
      - Fixed HIS ccm issue in function EDMA_PrepareTransferConfig.
      - Fixed violations of MISRA C-2012 rule 11.6, 10.7, 10.3, 18.1.
    - Bug Fixes
      - Added ACTIVE & BITER & CITER bitfields to determine the channel status to fixed the issue of the transfer request cannot submit by function EDMA_SubmitTransfer when channel is idle.

  - 2.3.1
    - Improvements
      - Added source/destination address alignment check.
      - Added driver IRQ handler support for multi DMA instance in one SOC.

  - 2.3.0
    - Improvements
      - Added new api EDMA_PrepareTransferConfig to allow different configurations of width and offset.
    - Bug Fixes
      - Fixed violations of MISRA C-2012 rule 10.4, 10.1.
      - Fixed the Coverity issue regarding out-of-bounds write.

  - 2.2.0
    - Improvements
      - Added peripheral-to-peripheral support in EDMA driver.

  - 2.1.9
    - Bug Fixes
      - Fixed MISRA issue: Rule 10.7 and 10.8 in function EDMA_DisableChannelInterrupts and EDMA_SubmitTransfer.
      - Fixed MISRA issue: Rule 10.7 in function EDMA_EnableAsyncRequest.

  - 2.1.8
    - Bug Fixes
      - Fixed incorrect channel preemption base address used in
        EDMA_SetChannelPreemptionConfig API which causes incorrect configuration of the channel
        preemption register.

  - 2.1.7
    - Bug Fixes
      - Fixed incorrect transfer size setting.
        - Added 8 bytes transfer configuration and feature for RT series;
        - Added feature to support 16 bytes transfer for Kinetis.
      - Fixed the issue that EDMA_HandleIRQ would go to incorrect branch
        when TCD was not used and callback function not registered.

  - 2.1.6
    - Bug Fixes
      - Fixed KW3X MISRA Issue.
        - Rule 14.4, 10.8, 10.4, 10.7, 10.1, 10.3, 13.5, and 13.2.
    - Improvements
      - Cleared the IRQ handler unavailable for specific platform with macro
        FSL_FEATURE_EDMA_MODULE_CHANNEL_IRQ_ENTRY_SHARED_OFFSET.

  - 2.1.5
    - Improvements
      - Improved EDMA IRQ handler to support half interrupt feature.

  - 2.1.4
    - Bug Fixes
      - Cleared enabled request, status during EDMA_Init for the case that EDMA is halted before reinitialization.

  - 2.1.3
    - Bug Fixes
      - Added clear DONE bit in IRQ handler to avoid overwrite TCD issue.
      - Optimized above solution for the case that transfer request occurs in callback.

  - 2.1.2
    - Improvements
      - Added interface to get next TCD address.
      - Added interface to get the unused TCD number.

  - 2.1.1
    - Improvements
      - Added documentation for eDMA data flow when scatter/gather is implemented for the EDMA_HandleIRQ API.
      - Updated and corrected some related comments in the EDMA_HandleIRQ API and edma_handle_t struct.

  - 2.1.0
    - Improvements
      - Changed the EDMA_GetRemainingBytes API into EDMA_GetRemainingMajorLoopCount due to eDMA IP limitation (see API
        comments/note for further details).

  - 2.0.5
    - Improvements
      - Added pubweak DriverIRQHandler for K32H844P (16 channels shared).

  - 2.0.4
    - Improvements
      - Added support for SoCs with multiple eDMA instances.
      - Added pubweak DriverIRQHandler for KL28T DMA1 and MCIMX7U5_M4.

  - 2.0.3
    - Bug Fixes
      - Fixed the incorrect pubweak IRQHandler name issue, which caused re-definition build errors when client set
        his/her own IRQHandler, by changing the 32-channel IRQHandler name to DriverIRQHandler.

  - 2.0.2
    - Bug Fixes
      - Fixed incorrect minorLoopBytes type definition in _edma_transfer_config struct, and defined minorLoopBytes as
        uint32_t instead of uint16_t.

  - 2.0.1
    - Bug Fixes
      - Fixed the eDMA callback issue (which did not check valid status) in EDMA_HandleIRQ API.

  - 2.0.0
    - Initial version.
*/
